forcopy

git clone http://android.googlesource.com/kernel/goldfish.git
git branch -a
git checkout android-goldfish-3.4
git reset --hard d3ffcc7


# android less 4.0 (will cause blackscreen)
make CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm goldfish_defconfig
# android above 4.0
make CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm goldfish_armv7_defconfig
make CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm -j4

panda1 compile:
get panda_install.bash, and comment the build.sh call line, otherwise, all file will owner is root
sudo panda_install.bash
sudo apt-get install libsdl1.2-dev
or build.sh get error: fatal error: SDL/SDL.h: No such file or directory
cd panda/qemu
chge build.sh content: (for android support)

 36 #./configure --target-list=x86_64-softmmu,i386-softmmu,arm-softmmu \
 37 #--prefix=`pwd`/install \
 38 #--disable-pie \
 39 #--disable-xen \
 40 #--disable-libiscsi \
 41 #$LLVM_BIT \
 42 #--extra-cflags="-O2 -I/usr/local/include" \
 43 #--extra-cxxflags="-O2" \
 44 #--extra-ldflags="-L/usr/local/lib -L/usr/local/lib64 -lprotobuf-c -lprotobuf -lpthread"
 45 
 46 ./configure --target-list=arm-softmmu \
 47 --prefix=`pwd`/install \
 48 --enable-android \
 49 --disable-pie \
 50 --disable-xen \
 51 --disable-libiscsi \
 52 $LLVM_BIT \
 53 --extra-cflags="-O2 -I/usr/local/include" \
 54 --extra-cxxflags="-O2" \
 55 --extra-ldflags="-L/usr/local/lib -L/usr/local/lib64 -L/usr/local/lib -lprotobuf-c -lprotobuf -lpthread"


./build.sh

cd /home/fhc/Android/Sdk/system-images/android-19/default/armeabi-v7a
cp kernel-qemu ~/androidstuff/
cp ramdisk.img  ~/androidstuff/
cp system.img ~/androidstuff/
cp userdata.img ~/androidstuff/


qemu-img convert -f raw -O qcow2 system.img system.qcow2
qemu-img convert -f raw -O qcow2 userdata.img userdata.qcow2

qemu-img create -f qcow2 cache.img.qcow2 1G
qemu-img create -f qcow2 sdcard.img.qcow2 1G
# or
~/Android/Sdk/tools/mksdcard -l sdcard 512M sdcard.img
qemu-img convert -f raw -O qcow2 sdcard.img sdcard.qcow2

# convert qcow2 v3 to v2 
qemu-img amend -f qcow2 -o compat=0.10 system.qcow2 
qemu-img amend -f qcow2 -o compat=0.10 userdata.qcow2 
qemu-img amend -f qcow2 -o compat=0.10 cache.qcow2 
qemu-img amend -f qcow2 -o compat=0.10 sdcard.qcow2 

use avd ctreate vm and convert
python ~/oldpanda/panda/scripts/pandroidConverter.py Nexus_5_API_19_2
../scripts/runandroid.py /home/fhc/androidstuff2 19
-----------cmdline is: -----------
arm-softmmu/qemu-system-arm -M android_arm -cpu cortex-a9 -kernel /home/fhc/androidstuff2/kernel -initrd /home/fhc/androidstuff2/initramfs -global goldfish_nand.system_path=/home/fhc/androidstuff2/system-pandroid.qcow2 -global goldfish_nand.user_data_path=/home/fhc/androidstuff2/data-pandroid.qcow2 -global goldfish_nand.cache_path=/home/fhc/androidstuff2/cache-pandroid.qcow2 -append console=ttyS0 ndns=2 qemu=1 no_console_suspend=1 qemu.gles=0 android.qemud=ttyS1 -m 2G -no-reboot -monitor telnet:localhost:4321,server,nowait -show-cursor -serial stdio -serial telnet:localhost:4421,server,nowait -display sdl -global goldfish_mmc.sd_path=/home/fhc/androidstuff2/sdcard.qcow2 -android -S -net nic,vlan=1 -net user,vlan=1 -global goldfish_nand.ext4=on

----------------------------------


install Beyond Compare 
http://blog.csdn.net/bingyu9875/article/details/52856675
install wine (use apt is too old version)
https://wiki.winehq.org/Ubuntu
use net:
sudo dpkg --add-architecture i386 
wget -nc https://dl.winehq.org/wine-builds/Release.key
sudo apt-key add Release.key
sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
sudo apt-get update
sudo apt-get install --install-recommends winehq-stable

arm board on qemu
http://www.bkjia.com/Androidjc/1027005.html
goldfish kernel
http://blog.csdn.net/leopard21/article/details/21715905

panda 1.x
https://github.com/moyix/panda

Temu plugin for return-oriented rootkit
https://github.com/huydhn/Detector

all reverse engineering tools:
http://wiki.yobi.be/wiki/Reverse-Engineering
android source build for qemu
https://github.com/robherring/generic_device/wiki/Building


------------------------------

https://gist.github.com/bridgeythegeek/d7a6c449287c6e32187be2639a7920bf



$ pwd
/home/fhc/oldpanda/panda/qemu

../scripts/runandroid.py /home/fhc/androidstuff2 19 -loadvm ff

# for qemu cmd, type ? for help, type q for exit(also exit vm)
# for quit telnet , type '^]' to enter telnet  then type quit (or ? for help)
telnet localhost 4321

# type ? for help
telnet localhost 4421




http://www.linuxidc.com/Linux/2012-10/72284.htm
https://codeyarns.com/2015/02/26/how-to-switch-gcc-version-using-update-alternatives/

sudo update-alternatives --install /usr/bin/arm-linux-gnueabi-gcc arm-linux-gnueabi-gcc /usr/bin/arm-linux-gnueabi-gcc-4.9 40
sudo update-alternatives --config arm-linux-gnueabi-gcc



cd ~/android-volatility/tools/linux
$ zip ~/android-volatility/volatility/plugins/overlays/linux/Golfish-3.4.0.zip module.dwarf ~/goldfishnew/System.map




----------------------------------------------------
# run android emulator
qok2 
# root emulator
https://infosectrek.wordpress.com/2017/03/06/rooting-the-android-emulator/
# install some thing, prepare env
apkinstall xxx.apk
# open qemu terminal
telnet localhost 4321
# begin record, need time xx second
begin_record myreName
# do some thing
xxxx
# end record, need time xx second
end_record
# replay with some plug: like:
cd /home/fhc/panda1dev/panda/qemu
touch stringsearch_search_strings.txt
qok2re
the result in:stringsearch_string_matches.txt

-------------------- use vol
compile android kernel: version 3.4.67-01422-gd3ffcc7-dirty

kernel：
参考：http://blog.csdn.net/qiaowei020/article/details/50312311
git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6 ~/bin/crossgcc4.6
git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7 ~/bin/crossgcc4.7
git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8 ~/bin/crossgcc4.8

git clone http://android.googlesource.com/kernel/goldfish.git
git branch -a
git checkout remotes/origin/android-goldfish-3.4
git reset --hard d3ffcc7
git clean  -d  -fx ""

**************************
create profile for vol
make menuconfig
# select and enter this option
Enable loadable module support -->
# select this two options
Forced Module loading
Module unloading
--------- not work, just use good .config
cp ~/importantbk/configBkkok .config
**************************

make CROSS_COMPILE=/home/fhc/bin/crossgcc4.7/bin/arm-eabi- ARCH=arm     goldfish_armv7_defconfig
make CROSS_COMPILE=/home/fhc/bin/crossgcc4.7/bin/arm-eabi- ARCH=arm -j4


create profile ref:https://github.com/volatilityfoundation/volatility/wiki/Android
sudo apt install dwarfdump
git clone https://github.com/volatilityfoundation/volatility.git ~/android-volatility
cd ~/android-volatility/tools/linux
# chge Makefile , just use good
cp ~/importantbk/Makefile .
make 
# create the profile:
zip ~/android-volatility/volatility/plugins/overlays/linux/Golfish-3.4.67.zip module.dwarf ~/goldfish/System.map

----------------use vol.py
cd /home/fhc/android-volatility
sudo easy_install pycrypto
sudo easy_install distorm3
# or use pip:
sudo apt install python-pip
sudo pip install pycrypto
sudo pip install distorm3

python vol.py --help
python vol.py --info
python vol.py --info | grep linux
python vol.py --profile=LinuxGolfish-3_4_67ARM --help
python vol.py --profile=LinuxGolfish-3_4_0ARM -f /home/fhc/oldpanda/panda linux_apihooks

# support poor for arm
python vol.py --profile=LinuxGolfish-3_4_0ARM -f /home/fhc/oldpanda/panda/qemu/bbmem linux_malfind

































