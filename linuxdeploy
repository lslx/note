linuxdeploy ubuntu:


linux deploy:
https://github.com/meefik/linuxdeploy/releases

https://arachnoid.com/android/LinuxOnAndroid/index.html

linux deploy   (very good)
proot          (not stable)
GNURoot
Complete Linux Installer (is bad, donot update)

# mount not work, mount must be before chroot,use other way
mount --bind /system  xx/yy/system


http://wiki.ubuntu.org.cn/%E4%BF%AE%E6%94%B9locale
https://wiki.debian.org/Locale#Manually
https://perlgeek.de/en/article/set-up-a-clean-utf8-environment
---------------------
linux deploy install ubuntu 16.04:
only chge:(click right bottom to set)
gnu/linux:ubuntu
source:http://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/
install type:dir
fix: user: android --> fhc
pw:xxxx
mount android res:yes
mount points: (system and data dir will auto create)
/system:/system
/data:/data
use ssh:yes
(click top right and select install to install ubuntu)(start at 10:56 and complete at)
you can change mount status(system and data) when containner is runing, after change
you need click config(top right),and start(bottom left)
click right top to insall, grant root access,(wait 5-6 min for install)
output "<<< deploy" when install coplete,then click start
ssh android@172.16.18.205    (ip is shown at top of screen)
or:
scp .ssh/authorized_keys android@172.16.18.205:.ssh/


#------------- install xx ---------------

sudo apt update
sudo apt install vim git default-jdk gdb wget
scp .ssh/id_rsa android@172.16.18.205:.ssh/
git clone git@github.com:lslx/note.git
cp note/.bash_profile_port .
. .bash_profile_port
wget -q -O- https://github.com/hugsy/gef/raw/master/scripts/gef.sh | sh

err resovle:
e:Python Exception <class 'UnicodeEncodeError'> 'ascii' codec can't encode character '\u27a4' in position 12: ordinal not in range(128):
r:
see:https://github.com/singularityware/singularity/issues/11
echo "LC_ALL=en_US.UTF-8" >> /etc/environment
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
sudo locale-gen en_US.UTF-8

#check
sudo dpkg-reconfigure locales

add to .bashrc,see:https://perlgeek.de/en/article/set-up-a-clean-utf8-environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

gdb
gef missing
[*] Command `unicorn-emulate` is missing, reason  →  Missing `unicorn` package for Python3. Install with `pip3 install unicorn`.
[*] Command `capstone-disassemble` is missing, reason  →  Missing `capstone` package for Python3. Install with `pip3 install capstone`.
[*] Command `ropper` is missing, reason  →  Missing `ropper` package for Python3, install with: `pip3 install ropper`.
[*] Command `assemble` is missing, reason  →  Missing `keystone-engine` package for Python3, install with: `pip3 install keystone-engine`.
[*] Command `set-permission` is missing, reason  →  Missing `keystone-engine` package for Python3, install with: `pip3 install keystone-engine`.

sudo apt install  python-pip python3-pip
# install keystone-engine need cmake
sudo apt install cmake
sudo pip3 install --install-option="--prefix=/home/android/.local" unicorn capstone ropper keystone-engine 

# install gdb8.1: , texinfo used when make install
sudo apt install make texinfo
wget https://ftp.gnu.org/gnu/gdb/gdb-8.1.tar.xz
tar xJvf gdb-8.1.tar.xz
mkdir buildgdb
cd buildgdb
../gdb-8.1/configure --prefix=/home/android/bin
# make need x min, 52<x<62
make
make install
ln -s ~/bin/gdb ~/bin/gdb81
because gdb81 use py2.7,so install:
sudo pip install --install-option="--prefix=/home/android/.local" unicorn capstone ropper keystone-engine 

----err,resolve----
if texinfo not install
gdb's make install will faild, then cause gdb could not find python:
>>>>
Could not load the Python gdb module from `/home/android/bin/share/gdb/python'.
Limited Python support is available from the _gdb module.
Suggest passing --data-directory=/path/to/gdb/data-directory.
<<<<
(but your can pass --data-directory=/path/to/gdb/data-directory to gdb resolve it,[when your cross compile])




PATH=/system/bin:$PATH LD_LIBRARY_PATH=/system/lib CLASSPATH=/system/framework/am.jar /system/bin/app_process /system/bin com.android.commands.am.Am

PATH=/system/bin:$PATH CLASSPATH=/system/framework/am.jar /system/bin/app_process /system/bin com.android.commands.am.Am

strace -e verbose=all -o se5 -E ANDROID_DATA=/data -E ANDROID_ROOT=/system -E LD_LIBRARY_PATH=/system/lib -E CLASSPATH=/system/framework/am.jar /system/bin/app_process /system/bin com.android.commands.am.Am

PATH=/system/bin:$PATH ANDROID_DATA=/data ANDROID_ROOT=/system am

LD_LIBRARY_PATH=/system/lib /data/local/tmp/strace

run gun tool on bionic:
LINUXRT=/data/data/ru.meefik.linuxdeploy/env/rootfs/linux
LD_LIBRARY_PATH=$LINUXRT/lib/arm-linux-gnueabihf $LINUXRT/lib/ld-linux-armhf.so.3 $LINUXRT/usr/bin/strace -e verbose=all -o a3 -E LD_LIBRARY_PATH=/system/lib -E CLASSPATH=/system/framework/am.jar /system/bin/app_process /system/bin com.android.commands.am.Am


e:r:
mount -t debugfs none /sys/kernel/debug 
cutils-trace: Error opening trace file: No such file or directory (2)
05-23 13:54:29.468  4617  4617 E ICU     : ANDROID_DATA environment variable not set


apt search android: maybe useful:
abootimg
apktool
volatility



---other:
ubuntu-make/xenial 16.02.1 all
  setup your development environment on ubuntu easily
lime-forensics-dkms/xenial 1.7.2-1 all
  kernel module to memory dump (DKMS)
libmedia1/xenial 0.1.0+git20151016+6d424c9-0ubuntu7 armhf
  Library to provide access to the Android Media HAL
libhybris-common1/xenial 0.1.0+git20151016+6d424c9-0ubuntu7 armhf
  Common library that contains the Android linker and custom hooks
--
android-src-vendor/xenial 7-0ubuntu1 all
  Vendor files to build Android Open Source Project

android-tools-adb/xenial 5.1.1r36+git20160322-0ubuntu3 armhf
  Android Debug Bridge CLI tool

android-tools-adbd/xenial 5.1.1r36+git20160322-0ubuntu3 armhf
  Android Debug Bridge Phone Daemon

android-tools-fastboot/xenial 5.1.1r36+git20160322-0ubuntu3 armhf
  Android Fastboot protocol CLI tool

android-tools-fsutils/xenial 5.1.1r36+git20160322-0ubuntu3 armhf
  Android ext4 utilities with sparse support

androidsdk-ddms/xenial 22.2+git20130830~92d25d6-3 all
  Graphical debugging tool for Android






http://meefik.ru/
hack:https://hackmag.com
https://hackmag.com/mobile/building-kernel-modules-and-native-linux-applications-for-android/



######################### for pc #####################################
see:http://meefik.ru/

wget -O cli.zip https://github.com/meefik/linuxdeploy-cli/archive/master.zip
unzip cli.zip
rm cli.zip
ln -sf ~/linuxdeploy-cli/cli.sh ~/bin/linuxdeploy
ENV_DIR=/home/fhc/envdir
TARGET_PATH=$ENV_DIRrootfs/linux
mkdir -p $TARGET_PATH
linuxdeploy -p linux conf --method='chroot' --source-path='https://mirrors.tuna.tsinghua.edu.cn/ubuntu/' \
    --distrib='ubuntu' --arch='amd64' --suite='xenial' --target-path='$ENV_DIR/rootfs/linux' \
    --chroot-dir='$TARGET_PATH' --target-type='directory' --username='fhc' --include='bootstrap'

linuxdeploy -p linux conf -x
linuxdeploy -p linux deploy
linuxdeploy -p linux shell -u root


-----------------------------
n5x:

make bullhead_defconfig
make menuconfig  (module load,unload)
vi .config
CONFIG_HAVE_PROBE=y
CONFIG_PROBES=y
CONFIG_UPROBE_EVENT=y
CONFIG_UPROBES=y
make -j9

for bull_head:
abootimg --create bootnew.img -f bootimg.cfg -k /home/fhc/ext800/kernel/n5xmsm601-3.10.73-g4e0bcb3/msm/arch/arm64/boot/Image.gz-dtb -r initrd.img
abootimg --create bootnew.img -f bootimg.cfg -k /home/fhc/ext800/kernel/n5xmsm601-3.10.73-g4e0bcb3/Image.gz-dtb -r initrd.img

fastboot flash boot bootnew.img

adb push vmlinux /data/local/tmp
adb push Makefile /data/local/tmp
adb push .config /data/local/tmp
adb push Module.symvers /data/local/tmp
cp arch/arm64/boot/Image.gz-dtb ..

make clean
cd ..
zip -ry msm3.zip msm
adb push msm3.zip /data/local/tmp
arm-linux-gnueabi-objcopy --only-keep-debug vmlinux vmlinux.debug

----------------systemtap-------------------
手工创建内核debuginfo相关调试信息
https://www.douban.com/note/350501219/

PATH=/system/bin:$PATH ANDROID_DATA=/data ANDROID_ROOT=/system am



/data/data/ru.meefik.linuxdeploy/bin/linuxdeploy shell -u root

cd /lib/modules/3.4.0-g2f6be71-dirty
mkdir -p /modules/3.4.0-g2f6be71-dirty
# in linux host: compile kernel
cd /home/fhc/ext800/kernel/msm601systap/msm
. ../../kernel601new.sh
make hammerhead_defconfig
make menuconfig
# https://www.cnblogs.com/huberypan/p/7976155.html

"cannot get security labeling handle: No such file or directory"
mount -o remount,ro /sys/fs/selinux
apt install systemtap
apt remove gcc-5.3
apt install gcc-4.8
cd /usr/bin
ln -s gcc gcc-4.8
# err:    ./scripts/recordmcount: 1: ./scripts/recordmcount: Syntax error: end of file unexpected
cd /data/local/tmp
make scripts

stap -ve 'probe kernel.function("sys_openat") {log("hello world") exit()}'
stap -l 'kernel.function("*")' | grep mkdir

stap -ve 'probe kernel.function("sys_mkdirat").call { log ("enter") }'



------------------- uprobe patch , and other way -------------------------------
https://patches.linaro.org/patch/26046/

or: install other rom ,which has kernel 4.8













